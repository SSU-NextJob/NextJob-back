# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

# master 브랜치에 push, PR 이벤트 발생시 동작
on:
  push:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    # Spring Boot 어플리케이션 Build
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    # Docker 이미지 Build
    - name: Docker Image Build
      run: docker buildx build --platform linux/amd64 -t juhyun5060/nextjob-api .

    # Docker Hub Login
    - name: Docker Login
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Docker Hub Push
    - name: Docker Hub Push
      run: docker push juhyun5060/nextjob-api

    # Get GitHub IP
    - name: Get GitHub IP
      id: ip
      uses: haythem/public-ip@v1.2

    # AWS 접근 권한 취득(IAM)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v4.1.0
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    # Add GitHub IP to AWS
    - name: Add GitHub IP to AWS
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    # AWS EC2 Server Connect & Docker 명령어 실행
    - name: AWS EC2 Connection
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ubuntu
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.EC2_SSH_PORT }}
        timeout: '60s'
        script: |
          sudo docker stop nextjob-api
          sudo docker rm nextjob-api
          sudo docker run --name nextjob-api --restart unless-stopped --env-file ./NextJob-back/.env -it -d -p 8080:8080 juhyun5060/nextjob-api      

    # Remove GitHub IP from Security Group
    - name: Remove GitHub IP from Security Group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
