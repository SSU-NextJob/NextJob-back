<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextjob.back.kanbanBoard.service.KanbanBoardMapper">
    <insert id="insertKanbanBoard" parameterType="com.nextjob.back.kanbanBoard.domain.KanbanBoard" useGeneratedKeys="true" keyProperty="kanbanId">
        INSERT INTO kanban_boards (workspace_id) VALUES (#{workspaceId});
    </insert>

    <insert id="insertKanbanDefaultColumn">
        INSERT INTO kanban_columns (
            kanban_id,
            column_id,
            name,
            sort
        )
        SELECT
            #{kanbanId},
            dc.detail_code,
            dc.detail_name,
            dc.detail_code
        FROM detail_codes dc
        WHERE dc.group_code = 'DEFAULT_KANBAN_COLUMN'
    </insert>

    <select id="findTaskList" resultType="CamelCaseMap">
        /* KanbanBoardMapper.findTaskList */
        SELECT column_id
             , task_id
             , subject
             , importance
             , start_date
             , end_date
             , sort
          FROM kanban_tasks
         WHERE 1=1
           AND kanban_id = #{kanbanId}
           AND delete_date IS NULL
    </select>

    <insert id="insertTask">
        /* KanbanBoardMapper.insertTask */
        INSERT INTO kanban_tasks (
                  task_id
                  , kanban_id
                  , column_id
                  , subject
                  , content
                  , start_date
                  , end_date
                  , sort
                  , importance
                  , create_date
                  , modify_date
                  , user_id
        ) VALUES (
                    (SELECT next_id FROM (SELECT IFNULL(MAX(task_id), 0) + 1 AS next_id FROM kanban_tasks WHERE kanban_id = #{kanbanId}) AS temp)
                 , #{kanbanId}
                  , #{columnId}
                  , #{subject}
                  , #{content}
                  , #{startDate}
                  , #{endDate}
                  , #{sort}
                  , #{importance}
                  , NOW()
                  , NOW()
                  , #{userId}
        )
    </insert>

    <insert id="insertTaskUsers">
        /* KanbanBoardMapper.insertTaskUsers */
        INSERT INTO task_users (
                    user_id
                  , task_id
                  , kanban_id
        ) VALUES (
                    #{userId}
                  , #{taskId}
                  , #{kanbanId}
        )
    </insert>

    <update id="updateTask">
        /* KanbanBoardMapper.updateTask */
        UPDATE kanban_tasks
           SET subject = #{subject}
             , content = #{content}
             , start_date = #{startDate}
             , end_date = #{endDate}
             , importance = #{importance}
             , modify_date = NOW()
         WHERE task_id = #{taskId}
           AND kanban_id = #{kanbanId}
           AND column_id = #{columnId}
    </update>

    <delete id="deleteTaskUsers">
        /* KanbanBoardMapper.deleteTaskUsers */
        DELETE
          FROM task_users
         WHERE task_id = #{taskId}
           AND kanban_id = #{kanbanId}
    </delete>

    <update id="deleteTask">
        /* KanbanBoardMapper.deleteTask */
        UPDATE kanban_tasks
           SET delete_date = NOW()
         WHERE kanban_id = #{kanbanId}
           AND task_id = #{taskId}
    </update>

    <select id="findTaskDetail" resultType="CamelCaseMap">
        /* KanbanBoardMapper.findTaskDetail */
        SELECT
            column_id ,
            task_id ,
            subject ,
            content ,
            importance ,
            start_date ,
            end_date ,
            sort
        FROM kanban_tasks
        WHERE task_id = #{taskId} AND kanban_id = #{kanbanId} AND delete_date IS NULL;
    </select>

    <select id="findTaskUserList" resultType="CamelCaseMap">
        /* KanbanBoardMapper.findTaskUserList */
        SELECT
            a.user_id,
            b.name,
            b.profile_image
        FROM task_users AS a
        LEFT JOIN users AS b ON a.user_id  = b.user_id
        WHERE a.kanban_id = #{kanbanId} AND a.task_id = #{taskId};
    </select>

    <select id="findColumnList" resultType="CamelCaseMap">
        /* KanbanBoardMapper.findTaskList */
        SELECT column_id
             , name
             , sort
        FROM kanban_columns
        WHERE 1=1
          AND kanban_id = #{kanbanId}
          AND delete_date IS NULL
    </select>

    <update id="updateTaskStatus" parameterType="com.nextjob.back.kanbanBoard.domain.KanbanTasks">
        update kanban_tasks
        set column_id = #{columnId}, sort = #{sort}
        where kanban_id = #{kanbanId} and task_id = #{taskId}
    </update>
</mapper>
