<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextjob.back.post.service.PostMapper">
    <resultMap id="PostListResultMap" type="com.nextjob.back.post.web.PostListResponse">
        <id property="postId" column="post_id"/>
        <result property="title" column="title"/>
        <result property="roleType" column="role_type"/>
        <result property="createDate" column="create_date"/>
        <result property="userId" column="user_id"/>
        <result property="userName" column="user_name"/>
        <association property="project" javaType="com.nextjob.back.project.web.ProjectListResponse">
            <result property="projectId" column="project_id"/>
            <result property="name" column="project_name"/>
            <result property="content" column="project_content"/>
            <result property="type" column="project_type"/>
            <result property="startAt" column="start_at"/>
            <result property="endAt" column="end_at"/>
            <result property="image" column="image"/>
        </association>
    </resultMap>
    <resultMap id="PostDetailResultMap" type="com.nextjob.back.post.web.PostDetailResponse" extends="PostListResultMap">
        <result property="content" column="content"/>
    </resultMap>

    <select id="findPostList" parameterType="map" resultMap="PostListResultMap">
        SELECT
            p.post_id,
            p.title,
            GetDetailCodeName('USER_TYPE', p.role_type) as role_type,
            p.create_date,
            p.user_id,
            p.user_name,
            pr.project_id,
            pr.name AS project_name,
            GetDetailCodeName('PROJECT_TYPE', pr.type) AS project_type,
            pr.start_at,
            pr.end_at,
            pr.image
        FROM posts p
        INNER JOIN projects pr ON p.project_id = pr.project_id
        WHERE 1=1
            <if test="type != null and type != ''">
                AND pr.type = #{type}
            </if>
            <if test="role != null and role != ''">
                AND p.role_type = #{role}
            </if>
            <if test="search != null and search != ''">
                AND p.title LIKE CONCAT('%', #{search}, '%')
            </if>
            <if test="userId != null and userId != ''">
                AND p.user_id = #{userId}
            </if>
            AND p.delete_date IS NULL
            AND pr.delete_date IS NULL
        ORDER BY p.create_date DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="findPostDetail" parameterType="int" resultMap="PostDetailResultMap">
        SELECT
            p.post_id,
            p.title,
            p.content,
            GetDetailCodeName('USER_TYPE', p.role_type) as role_type,
            p.create_date,
            p.user_id,
            p.user_name,
            pr.project_id,
            pr.name AS project_name,
            pr.content AS project_content,
            GetDetailCodeName('PROJECT_TYPE', pr.type) AS project_type,
            pr.start_at,
            pr.end_at,
            pr.image
        FROM posts p
        INNER JOIN projects pr ON p.project_id = pr.project_id
        WHERE p.post_id = #{postId} AND p.delete_date IS NULL
    </select>

    <insert id="insertPost" parameterType="com.nextjob.back.post.domain.Post">
        INSERT INTO posts (
            user_id,
            user_name,
            project_id,
            title,
            content,
            role_type
        ) VALUES (
             #{userId},
             #{userName},
             #{projectId},
             #{title},
             #{content},
             #{roleType}
         )
    </insert>

    <update id="updatePost" parameterType="com.nextjob.back.post.domain.Post">
        UPDATE posts
        SET
            title = #{title},
            content = #{content},
            role_type = #{roleType},
            modify_date = NOW()
        WHERE post_id = #{postId}
    </update>

    <update id="deletePost" parameterType="int">
        UPDATE posts
        SET delete_date = NOW()
        WHERE post_id = #{postId}
    </update>
</mapper>