<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nextjob.back.project.service.ProjectMapper">

    <insert id="insertProject" parameterType="com.nextjob.back.project.domain.Project" useGeneratedKeys="true" keyProperty="projectId">
        INSERT INTO nextjob_db.projects
            (name, content, user_id, start_at, end_at, status, create_date, image, type)
        VALUES
            (#{name}, #{content}, #{creatorId}, #{startAt}, #{endAt}, #{status}, CURRENT_TIMESTAMP, #{image}, #{type});
    </insert>

    <!-- 프로젝트 상세 조회 -->
    <select id="findProjectDetail" resultType="CamelCaseMap">
        SELECT
            project_id,
            name,
            content,
            start_at,
            end_at,
            GetDetailCodeName('PROJECT_STATUS', status) AS status,
            image,
            GetDetailCodeName('PROJECT_TYPE', type) AS type
        FROM projects
        WHERE project_id = #{projectId}
    </select>

    <!-- 프로젝트 팀장 조회 -->
    <select id="findProjectCreatorId" resultType="int">
        SELECT
            user_id
        FROM projects
        WHERE project_id = #{projectId}
    </select>

    <!-- 프로젝트 지원 -->
    <insert id="insertApplyRequest">
        INSERT INTO requests (
            project_id,
            user_id,
            request_type,
            request_status,
            post_id
        ) VALUES (
             #{projectId},
             #{userId},
             #{requestType},
             #{requestStatus},
             #{postId}
         )
    </insert>

    <!-- 프로젝트 멤버 추가 -->
    <insert id="insertMember">
        INSERT INTO project_members (project_id, user_id, job_title)
        VALUES (#{projectId}, #{userId}, #{jobTitle});
    </insert>

    <!-- 프로젝트 멤버 확인 -->
    <select id="selectMemberByUserId" resultType="int">
        SELECT
            count(*)
        FROM project_members
        WHERE project_id = #{projectId} and user_id = #{userId}
    </select>

    <!-- 내가 만든 프로젝트 목록 조회 -->
    <select id="findCreateProjectList" resultType="CamelCaseMap">
        /* ProjectMapper.findCreateProjectList */
        SELECT projects.project_id
             , name
             , content
             , GetDetailCodeName('PROJECT_TYPE', type) AS type
             , start_at
             , end_at
             , ws.workspace_id
         FROM projects
         LEFT JOIN workspaces ws ON projects.project_id = ws.project_id
        WHERE 1=1
          AND user_id = #{userId}
          AND projects.delete_date IS NULL
    </select>

    <!-- 내가 참여한 프로젝트 목록 조회 -->
    <select id="findParticipationProjectList" resultType="CamelCaseMap">
        /* ProjectMapper.findParticipationProjectList */
        SELECT proj.project_id
             , proj.name
             , proj.content
             , GetDetailCodeName('PROJECT_TYPE', proj.type) AS type
             , proj.start_at
             , proj.end_at
             , ws.workspace_id
         FROM projects proj
    LEFT JOIN project_members proj_mem
           ON proj.project_id = proj_mem.project_id
    LEFT JOIN workspaces ws
           ON proj.project_id = ws.project_id
        WHERE 1=1
          AND proj_mem.user_id = #{userId}
          AND proj_mem.job_title = 'MEMBER'
          AND proj.delete_date IS NULL
    </select>

    <!-- 프로젝트 지원한 사용자 목록 조회 -->
    <select id="selectApplyMemberList" resultType="com.nextjob.back.project.web.ProjectUserResponse">
        SELECT
            r.project_id,
            r.user_id,
            r.post_id,
            u.name,
            u.description,
            u.profile_image,
            u.user_type,
            u.tech_stack,
            GetDetailCodeName('REQUEST_STATUS', r.request_status) AS request_status
        FROM requests r
        LEFT JOIN users u on r.user_id = u.user_id
        where r.project_id = #{projectId} and r.request_type = 'APPLY'
    </select>

    <!-- 프로젝트 참여 인원 조회 -->
    <select id="findProjectMemberList" resultType="CamelCaseMap">
        /* ProjectMapper.findProjectMemberList */
        SELECT proj_mem.project_id      /* 프로젝트아이디 */
             , users.name               /* 이름 */
             , proj_mem.job_title       /* 리더 or 맴버 */
             , users.description        /* 한줄소개 */
             , users.profile_image      /* 프로필 이미지 */
             , GetDetailCodeName('USER_TYPE', users.user_type) AS user_type /* 역할(백엔드 등) */
             , users.tech_stack         /* 기술스택 */
          FROM project_members proj_mem
     LEFT JOIN users
            ON proj_mem.user_id = users.user_id
         WHERE 1=1
           AND proj_mem.project_id = #{projectId}
    </select>

    <select id="findPostApplyMember" resultType="int">
        /* ProjectMapper.findPostApplyMember */
        SELECT COUNT(*)
          FROM requests
         WHERE user_id = #{userId}
           AND post_id = #{postId}
    </select>

    <update id="deleteProject" parameterType="int">
        UPDATE projects
        SET delete_date = NOW()
        WHERE project_id = #{projectId}
    </update>
</mapper>